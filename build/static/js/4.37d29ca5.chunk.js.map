{"version":3,"sources":["components/http-hooks.js","components/ErrorModal.js","css/Task.module.css","components/Backdrop.js","components/Modal.js","css/FilterByStatus.module.css","css/TaskItem.module.css","css/TaskList.module.css","components/FilterByStatus.js","components/Task.js","components/TaskItem.js","components/TaskList.js"],"names":["useHttpClient","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","url","a","method","body","headers","fetch","response","json","responseData","ok","Error","mess","message","clearError","ErrorModal","props","onCancel","onClear","header","show","footer","className","classes","edit","onClick","module","exports","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","Modal","Fragment","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","FilterByStatus","main","value","selected","onChange","onFilter","target","Task","auth","useContext","AuthContext","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","process","id","token","onDelete","cancel","delete","LoadingSpinner","task","p","values","title","description","status","createdAt","toString","button","to","onClose","TaskItem","isClicked","setIsClicked","clickedHandler","prev","circle","count","stat","src","alt","onDeleteTask","TaskList","setTask","filteredStatus","setFilteredStatus","useEffect","fetchTasks","filteredTask","filter","t","deleteHandler","taskId","_id","asOverlay","userId","taskButton","selectedStatus","length","map","owner","filTask","toLowerCase"],"mappings":"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","file":"static/js/4.37d29ca5.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n    const sendRequest = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers\r\n            })\r\n            const responseData = await response.json()\r\n            if (!response.ok) {\r\n                throw new Error(responseData.mess)\r\n            }\r\n            setIsLoading(false)\r\n            return responseData\r\n        } catch (err) {\r\n            setError(err.message || \"Something went wrong\")\r\n            setIsLoading(false)\r\n            throw err\r\n        }\r\n\r\n    }, [])\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    return { isLoading, error, sendRequest, clearError }\r\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport classes from \"../css/Task.module.css\"\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<button className={classes.edit} onClick={props.onClear}>Okay</button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Task_main__1S7O9\",\"task\":\"Task_task__y_jar\",\"p\":\"Task_p__3_LGx\",\"button\":\"Task_button__2WaKy\",\"edit\":\"Task_edit__1rpTY\",\"delete\":\"Task_delete__1C-mw\",\"cancel\":\"Task_cancel__395EH\",\"values\":\"Task_values__3uKPV\"};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n        document.getElementById('backdrop-hook')\r\n    );\r\n};\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form\r\n                onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.show && <Backdrop onClick={props.onCancel} />}\r\n            <CSSTransition\r\n                in={props.show}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={200}\r\n                classNames=\"modal\"\r\n            >\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"FilterByStatus_main__2srKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TaskItem_main__XV2FC\",\"task\":\"TaskItem_task__1JiDL\",\"circle\":\"TaskItem_circle__29gxe\",\"stat\":\"TaskItem_stat__3dK8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TaskList_main__W4S3q\",\"title\":\"TaskList_title__2UsEv\",\"taskButton\":\"TaskList_taskButton__6YfZw\",\"filTask\":\"TaskList_filTask__wZzs4\"};","import classes from \"../css/FilterByStatus.module.css\"\r\n\r\nconst FilterByStatus = props => {\r\n    const filterStatusHandler = (event) => {\r\n        event.preventDefault()\r\n        props.onFilter(event.target.value)\r\n    }\r\n    return <div className={classes.main}>\r\n        <label>Filter By Status</label>\r\n        <select value={props.selected} onChange={filterStatusHandler}>\r\n            <option value=\"All Tasks\">All Tasks</option>\r\n            <option value=\"Incomplete\">Incomplete</option>\r\n            <option value=\"In Progress\">In Progress</option>\r\n            <option value=\"Completed\">Completed</option>\r\n        </select>\r\n    </div>\r\n}\r\n\r\nexport default FilterByStatus","// import { Link, useParams } from \"react-router-dom\"\r\n// const Task = props => {\r\n//     const tId = useParams().taskId\r\n//     const task = props.items.filter(t => t.id === tId)\r\n//     console.log(task)\r\n//     return <div>\r\n//         <p>{task[0].title}</p>\r\n//         <p>{task[0].description}</p>\r\n//         <p>{task[0].status}</p>\r\n//         <p>{task[0].createdAt}</p>\r\n//         <Link to={`/task/${tId}`}>\r\n//             <button>Edit</button>\r\n//         </Link>\r\n//         <button>Delete</button>\r\n//     </div>\r\n// }\r\n\r\n// export default Task\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport React, { useState, useContext } from \"react\";\r\nimport Modal from \"./Modal\"\r\nimport LoadingSpinner from \"./LoadingSpinner\"\r\nimport ErrorModal from \"./ErrorModal\"\r\nimport { useHttpClient } from \"./http-hooks\"\r\nimport { AuthContext } from \"./auth-context\"\r\nimport classes from \"../css/Task.module.css\"\r\n\r\nconst Task = props => {\r\n    const auth = useContext(AuthContext)\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n    };\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    };\r\n\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmModal(false);\r\n        try {\r\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + `/tasks/${props.id}`, \"DELETE\", null, { \"Authorization\": \"Bearer \" + auth.token })\r\n            props.onDelete(props.id)\r\n        } catch (err) {\r\n\r\n        }\r\n    };\r\n    return <div>\r\n        <ErrorModal error={error} onClear={clearError}></ErrorModal>\r\n        <Modal\r\n            show={showConfirmModal}\r\n            onCancel={cancelDeleteHandler}\r\n            header=\"Are you sure?\"\r\n            footer={\r\n                <React.Fragment>\r\n                    <button className={classes.cancel} onClick={cancelDeleteHandler}>\r\n                        CANCEL\r\n                    </button>\r\n                    <button className={classes.delete} onClick={confirmDeleteHandler}>\r\n                        DELETE\r\n                    </button>\r\n                </React.Fragment>\r\n            }\r\n        >\r\n            <p>\r\n                Do you want to proceed and delete this task?\r\n            </p>\r\n        </Modal>\r\n        {isLoading && <LoadingSpinner></LoadingSpinner>}\r\n        <div className={classes.main}>\r\n            <div className={classes.task}>\r\n                <p className={classes.p}>Title</p>\r\n                <p className={classes.values}>{props.title}</p>\r\n            </div>\r\n            <div className={classes.task}>\r\n                <p className={classes.p}>Description</p>\r\n                <p className={classes.values}>{props.description}</p>\r\n            </div>\r\n            <div className={classes.task}>\r\n                <p className={classes.p}>Status</p>\r\n                <p className={classes.values}>{props.status}</p>\r\n            </div>\r\n            <div className={classes.task}>\r\n                <p className={classes.p}>Created At</p>\r\n                <p className={classes.values}>{props.createdAt.toString()}</p>\r\n            </div>\r\n            <div className={classes.button}>\r\n                <Link to={`/task/${props.id}`}>\r\n                    <button className={classes.edit}>Edit</button>\r\n                </Link>\r\n                <button onClick={showDeleteWarningHandler} className={classes.delete}>Delete</button>\r\n                <button onClick={props.onClose} className={classes.cancel}>Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n// I was getting error when i was adding a task. It was getting displayed\r\n// but when i used to click on it it was showing error -objects are not valid as react child. And that was because\r\n// of some react rule or javascript rule which says that while rendering an object\r\n// react doesnt know how to render it. So what I did was i added toSting() to createdAt property abv\r\n// and everything worked fine. Read more abt it in stackoverflow type the error abv in google\r\n\r\nexport default Task","// import { Link } from \"react-router-dom\"\r\n\r\n// const TaskItem = props => {\r\n//     return <div>\r\n//         <Link to={`/${props.owner}/${props.id}`}>\r\n//             <div>\r\n//                 <p>{props.title}</p>\r\n//                 <p>{props.status}</p>\r\n//             </div>\r\n//         </Link>\r\n//     </div>\r\n// }\r\n\r\n// export default TaskItem\r\n\r\nimport { useState } from \"react\"\r\nimport Task from \"./Task\"\r\nimport classes from \"../css/TaskItem.module.css\"\r\nconst TaskItem = props => {\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const clickedHandler = () => {\r\n        setIsClicked(prev => !prev)\r\n    }\r\n    return <div className={classes.main}>\r\n        {!isClicked && <div className={classes.circle}><p>{props.count}</p></div>}\r\n        {!isClicked && <div onClick={clickedHandler} className={classes.task}>\r\n            <p>{props.title} - {props.status}</p>\r\n        </div>}\r\n        {!isClicked && <div className={classes.stat}>\r\n            <img src={props.status === \"Completed\" ? process.env.REACT_APP_IMG_SRC1 :\r\n                props.status === \"Incomplete\" ? process.env.REACT_APP_IMG_SRC2 : process.env.REACT_APP_IMG_SRC3} alt=\"Status\"></img>\r\n        </div>}\r\n        {isClicked && <Task onClose={clickedHandler} id={props.id} title={props.title} description={props.description} createdAt={props.createdAt} status={props.status} onDelete={props.onDeleteTask}></Task>}\r\n    </div>\r\n}\r\n\r\nexport default TaskItem","// import React, { useState, useContext, useEffect } from \"react\"\r\n// import { useHttpClient } from \"./http-hooks\"\r\n// import AddTask from \"./AddTask\"\r\n// import { AuthContext } from \"./auth-context\"\r\n// import FilterByStatus from \"./FilterByStatus\"\r\n// import TaskItem from \"./TaskItem\"\r\n// import LoadingSpinner from \"./LoadingSpinner\"\r\n// import ErrorModal from \"./ErrorModal\"\r\n\r\n// const TaskList = props => {\r\n//     const auth = useContext(AuthContext)\r\n//     const [task, setTask] = useState()\r\n//     const [filteredStatus, setFilteredStatus] = useState(\"All Tasks\")\r\n//     const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n//     useEffect(() => {\r\n//         const fetchTasks = async () => {\r\n//             try {\r\n//                 const responseData = await sendRequest(\"http://localhost:5000/tasks\", \"GET\", null, { \"Authorization\": \"Bearer \" + auth.token })\r\n//                 const filteredTask = responseData.filter(t => t.status === filteredStatus)\r\n//                 const data = filteredStatus === \"All Tasks\" ? responseData : filteredTask\r\n\r\n//                 setTask(data)\r\n//             } catch (err) {\r\n\r\n//             }\r\n\r\n//         }\r\n//         fetchTasks()\r\n//     }, [sendRequest, filteredStatus])\r\n\r\n//     const saveDataHandler = async (enteredTask) => {\r\n//         try {\r\n//             await sendRequest(\"http://localhost:5000/tasks\", \"POST\",\r\n//                 JSON.stringify({\r\n//                     title: enteredTask.title,\r\n//                     description: enteredTask.description,\r\n//                     status: enteredTask.status,\r\n//                     owner: auth.userId\r\n//                 }),\r\n//                 { \"Authorization\": \"Bearer \" + auth.token, \"Content-Type\": \"application/json\" }\r\n//             )\r\n//             // setTask(prevState => {\r\n//             //     return [{ id: enteredTask.id, title: enteredTask.title, description: enteredTask.description, status: enteredTask.status, createdAt: enteredTask.createdAt, owner: enteredTask.owner }, ...prevState]\r\n//             // })\r\n//         } catch (err) {\r\n\r\n//         }\r\n//     }\r\n//     const filterStatusHandler = selectedStatus => {\r\n//         setFilteredStatus(selectedStatus)\r\n//     }\r\n\r\n//     return <React.Fragment>\r\n//         <ErrorModal error={error} onClear={clearError}></ErrorModal>\r\n//         <div>\r\n//             {isLoading && <LoadingSpinner asOverlay></LoadingSpinner>}\r\n//             <AddTask onSaveData={saveDataHandler}></AddTask>\r\n//             <FilterByStatus selected={filteredStatus} onFilter={filterStatusHandler}></FilterByStatus>\r\n//             {task && !isLoading && task.length !== 0 ?\r\n//                 task.map(t => <TaskItem id={t.id} title={t.title} description={t.description} createdAt={t.createdAt} status={t.status} owner={task.owner}></TaskItem>) :\r\n//                 filteredStatus === \"All Tasks\" ? <p>You dont have any tasks</p> : <p>You dont have any {filteredStatus} tasks</p>}\r\n//         </div>\r\n//     </React.Fragment>\r\n// }\r\n\r\n// export default TaskList\r\n\r\nimport React, { useState, useContext, useEffect } from \"react\"\r\nimport { useHttpClient } from \"./http-hooks\"\r\nimport { AuthContext } from \"./auth-context\"\r\nimport FilterByStatus from \"./FilterByStatus\"\r\nimport TaskItem from \"./TaskItem\"\r\nimport LoadingSpinner from \"./LoadingSpinner\"\r\nimport ErrorModal from \"./ErrorModal\"\r\nimport { Link } from \"react-router-dom\"\r\nimport classes from \"../css/TaskList.module.css\"\r\nconst TaskList = props => {\r\n    const auth = useContext(AuthContext)\r\n    const [task, setTask] = useState()\r\n    const [filteredStatus, setFilteredStatus] = useState(\"All Tasks\")\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/tasks\", \"GET\", null, { \"Authorization\": \"Bearer \" + auth.token })\r\n                const filteredTask = responseData.filter(t => t.status === filteredStatus)\r\n                const data = filteredStatus === \"All Tasks\" ? responseData : filteredTask\r\n\r\n                setTask(data)\r\n            } catch (err) {\r\n\r\n            }\r\n\r\n        }\r\n        fetchTasks()\r\n    }, [sendRequest, filteredStatus])\r\n\r\n\r\n    const filterStatusHandler = selectedStatus => {\r\n        setFilteredStatus(selectedStatus)\r\n    }\r\n\r\n    const deleteHandler = (taskId) => {\r\n        setTask(prev => prev.filter(t => t._id !== taskId))\r\n    }\r\n    let count = 1\r\n\r\n    return <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError}></ErrorModal>\r\n        <div className={classes.main}>\r\n            {isLoading && <LoadingSpinner asOverlay></LoadingSpinner>}\r\n            <p className={classes.title}>Your Tasks</p>\r\n            <Link to={`/tasks/new/${auth.userId}`}>\r\n                <button className={classes.taskButton}>Add Task</button>\r\n            </Link>\r\n            <FilterByStatus selected={filteredStatus} onFilter={filterStatusHandler}></FilterByStatus>\r\n            {task && !isLoading && task.length !== 0 ?\r\n                task.map(t => <TaskItem count={count++} key={t._id} id={t._id} title={t.title} description={t.description} createdAt={t.createdAt} status={t.status} owner={task.owner} onDeleteTask={deleteHandler}></TaskItem>) :\r\n                filteredStatus === \"All Tasks\" ? <p className={classes.filTask}>You dont have any tasks</p> : <p className={classes.filTask}>You dont have any {filteredStatus.toLowerCase()} tasks</p>}\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default TaskList"],"sourceRoot":""}