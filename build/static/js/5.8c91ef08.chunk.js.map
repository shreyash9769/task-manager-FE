{"version":3,"sources":["components/http-hooks.js","components/ErrorModal.js","css/Task.module.css","components/Backdrop.js","components/Modal.js","components/ImageUpload.js","css/ImageUpload.module.css","css/Signup.module.css","components/Signup.js"],"names":["useHttpClient","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","url","a","method","body","headers","fetch","response","json","responseData","ok","Error","mess","message","clearError","ErrorModal","props","onCancel","onClear","header","show","footer","className","classes","edit","onClick","module","exports","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","Modal","Fragment","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ImageUpload","file","setFile","previewUrl","setPreviewUrl","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","id","ref","display","type","accept","onChange","pickedFile","target","files","length","onInput","image","preview","src","alt","current","click","Signup","auth","useContext","AuthContext","name","setName","email","setEmail","password","setPassword","age","setAge","setImage","inputHandler","value","submitHandler","process","JSON","stringify","formData","FormData","append","token","login","user","_id","main","asOverlay","form","htmlFor","placeholder","friend","to"],"mappings":"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","file":"static/js/5.8c91ef08.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n    const sendRequest = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers\r\n            })\r\n            const responseData = await response.json()\r\n            if (!response.ok) {\r\n                throw new Error(responseData.mess)\r\n            }\r\n            setIsLoading(false)\r\n            return responseData\r\n        } catch (err) {\r\n            setError(err.message || \"Something went wrong\")\r\n            setIsLoading(false)\r\n            throw err\r\n        }\r\n\r\n    }, [])\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    return { isLoading, error, sendRequest, clearError }\r\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport classes from \"../css/Task.module.css\"\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<button className={classes.edit} onClick={props.onClear}>Okay</button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Task_main__1S7O9\",\"task\":\"Task_task__y_jar\",\"p\":\"Task_p__3_LGx\",\"button\":\"Task_button__2WaKy\",\"edit\":\"Task_edit__1rpTY\",\"delete\":\"Task_delete__1C-mw\",\"cancel\":\"Task_cancel__395EH\",\"values\":\"Task_values__3uKPV\"};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n        document.getElementById('backdrop-hook')\r\n    );\r\n};\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form\r\n                onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.show && <Backdrop onClick={props.onCancel} />}\r\n            <CSSTransition\r\n                in={props.show}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={200}\r\n                classNames=\"modal\"\r\n            >\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport classes from \"../css/ImageUpload.module.css\"\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState()\r\n    const [previewUrl, setPreviewUrl] = useState()\r\n    const filePickerRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return\r\n        }\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file)\r\n    }, [file])\r\n    const pickedHandler = event => {\r\n        let pickedFile\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0]\r\n            setFile(pickedFile)\r\n        }\r\n        props.onInput(pickedFile)\r\n    }\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click()\r\n    }\r\n    return <div className=\"form-control\">\r\n        <input id={props.id} ref={filePickerRef} style={{ display: \"none\" }} type=\"file\" accept=\".jpg,.png,.jpeg\" onChange={pickedHandler}></input>\r\n        <div className={classes.image}>\r\n            <div className={classes.preview}>\r\n                {previewUrl && <img src={previewUrl} alt=\"Preview\"></img>}\r\n                {!previewUrl && <p>Please pick an image</p>}\r\n            </div>\r\n            <button type=\"button\" onClick={pickImageHandler}>Pick Image</button>\r\n        </div>\r\n    </div>\r\n}\r\nexport default ImageUpload","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageUpload_image__2yBKB\",\"preview\":\"ImageUpload_preview__jAGoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Signup_main__2xU7H\",\"form\":\"Signup_form__2s4JB\",\"friend\":\"Signup_friend__3CCkQ\"};","import React, { useState, useContext, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { AuthContext } from \"./auth-context\"\r\nimport LoadingSpinner from \"./LoadingSpinner\"\r\nimport ErrorModal from \"./ErrorModal\"\r\nimport { useHttpClient } from \"./http-hooks\";\r\nimport ImageUpload from \"./ImageUpload\"\r\nimport classes from \"../css/Signup.module.css\"\r\nconst Signup = () => {\r\n    const auth = useContext(AuthContext)\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [age, setAge] = useState(\"\")\r\n    const [image, setImage] = useState()\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n    const nameChangeHandler = event => {\r\n        setName(event.target.value)\r\n    }\r\n    const emailChangeHandler = event => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const passwordChangeHandler = event => {\r\n        setPassword(event.target.value)\r\n    }\r\n    const ageChangeHandler = event => {\r\n        setAge(event.target.value)\r\n    }\r\n\r\n    // const inputHandler = (value) => {\r\n    //     setImage(value)\r\n    // }\r\n\r\n    const inputHandler = useCallback((value) => {\r\n        setImage(value)\r\n    }, []);\r\n\r\n\r\n    const submitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n\r\n            const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/users\", \"POST\",\r\n                JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    password,\r\n                    age\r\n                }),\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            )\r\n            try {\r\n                const formData = new FormData()\r\n                formData.append(\"avatar\", image)\r\n                await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/users/me/avatar\", \"POST\", formData, {\r\n                    \"Authorization\": \"Bearer \" + responseData.token\r\n                })\r\n            } catch (err) {\r\n\r\n            }\r\n\r\n            auth.login(responseData.user._id, responseData.token)\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError}></ErrorModal>\r\n        <div className={classes.main}>\r\n            <div>\r\n                {isLoading && <LoadingSpinner asOverlay></LoadingSpinner>}\r\n                <form onSubmit={submitHandler} className={classes.form}>\r\n                    <ImageUpload onInput={inputHandler}></ImageUpload>\r\n                    <label htmlFor=\"name\">Full Name</label>\r\n                    <input id=\"name\" type=\"text\" onChange={nameChangeHandler} value={name} placeholder=\"Enter your name\"></input>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input id=\"email\" type=\"email\" onChange={emailChangeHandler} value={email} placeholder=\"Enter your email\"></input>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input id=\"password\" type=\"password\" onChange={passwordChangeHandler} value={password} placeholder=\"Enter your password\"></input>\r\n                    <label htmlFor=\"age\">Age</label>\r\n                    <input id=\"age\" type=\"number\" onChange={ageChangeHandler} value={age} placeholder=\"Enter your age\"></input>\r\n                    <button>Signup</button>\r\n\r\n                </form>\r\n            </div>\r\n            <div className={classes.friend}>\r\n                <h1>Sign Up</h1>\r\n                <h2>Hello, Friend</h2>\r\n                <p>Enter your personal details and start your journey with us</p>\r\n                <p>Already have an account?</p>\r\n                <Link to=\"/login\">\r\n                    <button>Switch to Login</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default Signup"],"sourceRoot":""}