{"version":3,"sources":["components/http-hooks.js","components/ErrorModal.js","css/Task.module.css","components/Backdrop.js","components/Modal.js","css/EditTask.module.css","components/EditTask.js"],"names":["useHttpClient","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","url","a","method","body","headers","fetch","response","json","responseData","ok","Error","mess","message","clearError","ErrorModal","props","onCancel","onClear","header","show","footer","className","classes","edit","onClick","module","exports","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","Modal","Fragment","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","EditTask","history","useHistory","auth","useContext","AuthContext","tId","useParams","taskId","taskName","setTaskName","taskDescription","setTaskDescription","taskStatus","setTaskStatus","task","setTask","useEffect","fetchTasks","process","token","title","description","status","submitHandler","JSON","stringify","push","userId","setTimeout","main","asOverlay","form","htmlFor","onChange","target","value","id","type"],"mappings":"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","file":"static/js/6.f87a8920.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n    const sendRequest = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers\r\n            })\r\n            const responseData = await response.json()\r\n            if (!response.ok) {\r\n                throw new Error(responseData.mess)\r\n            }\r\n            setIsLoading(false)\r\n            return responseData\r\n        } catch (err) {\r\n            setError(err.message || \"Something went wrong\")\r\n            setIsLoading(false)\r\n            throw err\r\n        }\r\n\r\n    }, [])\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    return { isLoading, error, sendRequest, clearError }\r\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport classes from \"../css/Task.module.css\"\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<button className={classes.edit} onClick={props.onClear}>Okay</button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Task_main__1S7O9\",\"task\":\"Task_task__y_jar\",\"p\":\"Task_p__3_LGx\",\"button\":\"Task_button__2WaKy\",\"edit\":\"Task_edit__1rpTY\",\"delete\":\"Task_delete__1C-mw\",\"cancel\":\"Task_cancel__395EH\",\"values\":\"Task_values__3uKPV\"};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n        document.getElementById('backdrop-hook')\r\n    );\r\n};\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form\r\n                onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.show && <Backdrop onClick={props.onCancel} />}\r\n            <CSSTransition\r\n                in={props.show}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={200}\r\n                classNames=\"modal\"\r\n            >\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"EditTask_main__1ZMpx\",\"form\":\"EditTask_form__24V7-\"};","import { useState, useEffect, useContext } from \"react\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { AuthContext } from \"./auth-context\"\r\nimport ErrorModal from \"./ErrorModal\"\r\nimport { useHttpClient } from \"./http-hooks\"\r\nimport LoadingSpinner from \"./LoadingSpinner\"\r\nimport classes from \"../css/EditTask.module.css\"\r\n\r\nconst EditTask = props => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const tId = useParams().taskId\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n    const [taskName, setTaskName] = useState()\r\n    const [taskDescription, setTaskDescription] = useState()\r\n    const [taskStatus, setTaskStatus] = useState()\r\n    const [task, setTask] = useState()\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/tasks/${tId}`, \"GET\", null, { \"Authorization\": \"Bearer \" + auth.token })\r\n\r\n                setTask(responseData)\r\n                setTaskName(responseData.title)\r\n                setTaskDescription(responseData.description)\r\n                setTaskStatus(responseData.status)\r\n            } catch (err) {\r\n\r\n            }\r\n\r\n        }\r\n        fetchTasks()\r\n    }, [sendRequest, tId])\r\n\r\n\r\n    const taskNameHandler = event => {\r\n        setTaskName(event.target.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = event => {\r\n        setTaskDescription(event.target.value)\r\n    }\r\n\r\n    const statusChangeHandler = event => {\r\n        setTaskStatus(event.target.value)\r\n    }\r\n\r\n    const submitHandler = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + `/tasks/${tId}`, \"PATCH\", JSON.stringify({\r\n                title: taskName,\r\n                description: taskDescription,\r\n                status: taskStatus\r\n            }), { \"Authorization\": \"Bearer \" + auth.token, \"Content-Type\": \"application/json\" })\r\n        } catch (err) {\r\n\r\n        }\r\n        history.push(`/tasks/${auth.userId}`)\r\n\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        history.push(`/tasks/${auth.userId}`)\r\n    }\r\n    if (isLoading) {\r\n        <LoadingSpinner></LoadingSpinner>\r\n    }\r\n\r\n    if (!task && !error) {\r\n        setTimeout(() => {\r\n            return <div>\r\n                Could not find the task\r\n            </div>\r\n        }, 5000)\r\n\r\n    }\r\n\r\n    return <div>\r\n        <ErrorModal error={error} onClear={clearError}></ErrorModal>\r\n        <div className={classes.main}>\r\n            {isLoading && <LoadingSpinner asOverlay></LoadingSpinner>}\r\n            {!isLoading && task && <form onSubmit={submitHandler} className={classes.form}>\r\n                <p>Edit Task</p>\r\n                <label htmlFor=\"taskName\">Task Name</label>\r\n                <input onChange={taskNameHandler} value={taskName} id=\"taskName\" type=\"text\"></input>\r\n                <label htmlFor=\"description\">Task Description</label>\r\n                <textarea onChange={descriptionChangeHandler} value={taskDescription} id=\"description\" type=\"text\"></textarea>\r\n                <label htmlFor=\"status\">Task Status</label>\r\n                <select onChange={statusChangeHandler} value={taskStatus} id=\"status\">\r\n                    <option value=\"Incomplete\">Incomplete</option>\r\n                    <option value=\"Completed\">Completed</option>\r\n                    <option value=\"In Progress\">In Progress</option>\r\n                </select>\r\n                <button type=\"submit\">Update Task</button>\r\n                <button type=\"button\" onClick={onCancelHandler}>Cancel</button>\r\n            </form>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default EditTask"],"sourceRoot":""}